@import 'functions';

//=====Color Values============================================================

$color-key: 'base' !default;
$dark-theme: (
  'primary': ( //color
    'base': #668fbe,
    'light': #2f435c, //#70a0ff,
    'dark': #597ba1,
    'on': #ffffff
  ),
  'accent': (
    'base': #80b1e8,
    'on': #ffffff
  ),
  'secondary': ( //color
    'base': #ffffff,
    'on': #000000
  ),
  'surface': (
    'base': #1e2a3a,
    'light': #2f435c,
    'dark': #151e29,
    'on': #ffffff
  ),
  'background': (
    'base': #111821,
    'on': #ffffff
  ),
  'error': (
    'base': #b00020,
    'on': #ffffff
  )
);

/*
color: rgba(0,0,0,0.5); //hover pagelink

background: rgba(0,0,0,0.3); //button background
border-color: transparent;
font-size: 1rem;
*/

$light-theme: (
  'primary': (
    'base': #668fbe,
    'light': #2f435c, //#70a0ff,
    'dark': #597ba1,
    'on': #ffffff
  ),
  'accent': (
    'base': #ffffff,
    'on': #ffffff
  ),
  'secondary': (
    'base': #ffffff,
    'on': #000000
  ), //e7eaf0
  'surface': (
    'base': #668fbe,
    'light': #fafafa,
    'dark': #e7eaf0,
    'on': #ffffff
  ),
  'background': (
    'base': #ffffff,
    'on': #000000
  ),
  'error': (
    'base': #b00020,
    'on': #ffffff
  )
);

$resume-theme: (
  'primary': (
    'base': #668fbe,
    'light': #ffffff,
    'dark': #ffffff,
    'on': #ffffff
  ),
  'accent': (
    'base': #668fbe,
    'on': #ffffff
  ),
  'secondary': (
    'base': #333333, //resume don't need
    'on': #000000
  ), //e7eaf0
  'surface': (
    'base': #fafafa,
    'light': #ffffff,
    'dark': #e7eaf0,
    'on': #000000 //#4f4f4f
  ),
  'background': (
    'base': #ffffff,
    'on': #000000
  ),
  'error': (
    'base': #b00020,
    'on': #ffffff
  )
);

//! IDEA: profile photo can be dragged in a circle like a record on a record player and music will start playing
$theme: $dark-theme;

$named-opacity: (
  'light': 0.8, // opacity used with lighter colors
  'dark': 0.4   // opacity used with darker colors
  // ... etc.
);

//=====Color Functions=========================================================

@function color(
  $name: 'primary',
  $variant: $color-key,
  $opacity: 1
) {
  $color: null;
  
  // Get the color spectrum
  $color-spectrum: map-get($theme, $name);
  
  // Get the color variant
  @if $color-spectrum {
    $color: map-get($color-spectrum, $variant);
  }
  
  // Get the alpha setting
  $alpha: if(type-of($opacity) == 'number', $opacity, map-get($named-opacity, $opacity));
  
  // Set the alpha of the color
  @if $alpha {
    $color: rgba($color, $alpha);
  }
  
  @return $color;
}

@function color-level($color-name: 'primary', $level: 0) {
  $color: color($color-name);
  $color-base: if($level < 0, black, white);

  @return mix($color-base, $color, $level * $color-interval);
}

@function color-alpha($name: 'primary', $opacity: 0) {
  $color: color($name);

  // Get the named opacity level, if it exists
  @if map-key-exists($named-opacity, $opacity) {
    $opacity: map-get($named-opacity, $opacity);
  }

  // Use rgba() to manipulate the color's alpha level
  @return rgba($color, $opacity);
}

//=====Contrast Functions======================================================

$contrast-colors: (
  'dark': (
    'primary': rgb(255, 255, 255),
    'secondary': rgba(255, 255, 255, .70),
    'disabled': rgba(255, 255, 255, .5),
    'hint': rgba(255, 255, 255, .12)
  ),
  'light': (
    'primary': rgba(0, 0, 0, .87),
    'secondary': rgba(0, 0, 0, .54),
    'disabled': rgba(0, 0, 0, .38),
    'hint': rgba(0, 0, 0, .12)
  ),
);

@function contrast($background: 'light', $type: 'primary') {
  $map: map-get($contrast-colors, $background);
  @return map-get($map, $type);
}

@mixin contrast($background: 'light', $type: 'primary') {
  color: contrast($background, $type)
}